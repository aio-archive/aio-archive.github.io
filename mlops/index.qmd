---
title: "MLOps"
---

# Module 1: Fundamental MLOps

::: {.callout-note collapse="true"}
# Course Schedule
| Module                              | Level | Theory Topics                                                                                                                                                                                                 | Practice/Projects                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 |
|--------------------------------------|-------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| **Linux**                           | 1     | + Understand GNU/Linux<br>+ Commands<br>+ Server administration                                                                                                         | + Install Ubuntu 22.04.<br>+ Server administration.                                                                                                                                                                                                                                                                                                                                                                                                                                               |
| **Python**                          | 2     | + Compiled vs interpreted language<br>+ Python common syntaxes<br>+ Data structures in Python<br>+ Function                                                            | + Configure Python and VSCode Environment for Basic Operations<br>+ Create a linear regression model from scratch using NumPy.<br>+ Explore classical machine learning models and techniques for feature engineering.<br>+ Develop an end-to-end solution for predicting house prices using classical machine learning algorithms, leveraging tools like NumPy, Pandas, Matplotlib, and Seaborn.                                                                                 |
| **Bash Scripting**                  | 1     | + Bash Scripting<br>+ Makefile<br>+ CronJob                                                                                                                            | + Use a bash script to calculate frequencies of flower species.<br>+ Implement an "install_me" feature for Linux installations, allowing user confirmation.<br>+ Develop a new line watcher to detect newly appended lines.<br>+ Create your first crawler to periodically fetch a file from the internet.<br>+ Build an automatic Ebay Deals crawler using Selenium, BeautifulSoup and cron job.                                                                |
| **WebAPI**                          | 2     | + What happens behind a Google Search?<br>+ API architecture styles: REST API, gRPC, Websocket and Webhook<br>+ Software Testing: functional and non-functional<br>+ Solutions to improve performance of a REST API<br>+ Fundamentals of FastAPI | + Build a secure Chatbot with FastAPI and ChatGPT.<br>+ Develop a real-time OCR prediction application using WebSocket.                                                                                                                                                                                                                                                                                                                                    |
| **Functional Testing**              | 1     | + Test-driven Development (TDD)<br>+ Software Testing Methods and Levels<br>+ Pytest and features: fixtures, markers, parametrize, mock, etc.<br>+ Test coverage & tox | + Practice unit test and integration test our API application                                                                                                                                                                                                                                                                                                                                                                                              |
| **Containerization & Orchestration I** | 2     | + Differentiate between Virtual Machine (VM) and Docker<br>+ Docker architecture & popular commands<br>+ Docker containers debugging techniques<br>+ Docker Compose & popular commands<br>+ Dockerfile best practices to build fast, easy to maintain and minimal security risks | + Set up and perform smoke tests for a local experiment tracking platform using Docker Compose.<br>+ Refine Docker Image Performance with Multistage Builds.<br>+ Deliver an OCR Project: Train a Model, Build an API with Image Caching, Package with an Optimized Dockerfile, and Deploy with Docker Compose.                                                                                                         |
| **Containerization & Orchestration II** | 1     | + k8s cluster's architecture<br>+ k8s objects and their lifecycles<br>+ k8s popular commands<br>+ k8s debugging techniques<br>+ Cost optimization tips while operating a k8s cluster, and applications<br>+ Package and manage a k8s application with Helm | + Practice k8s commands<br>+ Deploy the OCR Application to Kubernetes with Helm<br>+ Debug the newly created k8s application                                                                                                                                                                                                                                                                                                                               |
| **Cloud Services**                  | 1     | + Cloud vs On Premises<br>+ Key components of Cloud Computing Architecture<br>+ IaaS, PaaS and SaaS<br>+ Popular Google Cloud Platform (GCP) services for data and ML<br>+ ML system architectures on GCP | + Create a free-tier GCP account.<br>+ Deploy an OCR application on a VM on GCP.<br>+ Deploy an OCR application on k8s on GCP using NGINX API Gateway.                                                                                                                                                                                                                                                             |
| **CI/CD**                           | 1     | + Fundamentals of Git and Github<br>+ Introduction to CI/CD<br>+ CI/CD in ML engineering<br>+ Jenkins                                                                 | + Deploy Jenkins locally using Docker Compose and perform smoke tests.<br>+ Customize the Jenkins image to meet specific requirements.<br>+ Implement a Full CI/CD Pipeline on Jenkins: Test, Build, and Deploy<br>+ Improve CI/CD pipeline efficiency by implementing parallel runs.                                                                                                                               |
| **Infrastructure as Code (IaC)**    | 1     | + The importance of IaC<br>+ Ansible and popular commands for provisioning, managing configurations and application deployments on a VM<br>+ Terraform and its syntaxes for provisioning cloud resources | + Deploy a VM on Google Compute Engine (GCE) using Ansible.<br>+ Effortless OCR Deployment with Ansible.<br>+ Set up a Google Kubernetes Engine (GKE) cluster with Terraform.                                                                                                                                                                                                 |
| **Observable Systems**              | 2     | + Three pillars of observability: logs, metrics and traces<br>+ Observable system architecture<br>+ OpenTelemetry Python SDK                                            | + Set up a local monitoring platform including Prometheus, Grafana, ELK, Jaeger, and additional services.<br>+ Implement automatic and manual tracing for our OCR API using Jaeger, and manage traces.<br>+ Expose computing resources and custom metrics for our OCR API, visualize them on Grafana dashboards, and potentially create custom graphs.<br>+ Standardize logging practices and manage logs using ELK stack. |
:::

- [Lesson 4: Multithreading, Multiprocessing, AsyncIO](m1/lesson4.qmd)

